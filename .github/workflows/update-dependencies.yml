name: Update Dependencies

on:
  schedule:
    - cron: '0 16 * * 0'
  workflow_dispatch:

jobs:
  update-box2d:
    name: Update Box2D
    if: github.repository == 'GamesTrap/TRAP'
    runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
    steps:
      - name: Cleanup workspace
        if: ${{ always() }}
        uses: gamestrap/gha-workspace-cleanup@v1.2.4
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          ref: update-dependency-composite
      - uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_committer_name: TRAP CI/CD
      - uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Update Box2D
        if: ${{ always() }}
        uses: ./.github/composite/update-git-dependency
        with:
          dependency-path: "Dependencies/Box2D"
          update-method: "latest-commit"
          branch: "main"
          pr-title: "Box2D"
          pr-branch-name: "box2d-update"
          pr-token: ${{steps.generate-token.outputs.token}}

      - name: Update EnTT
        if: ${{ always() }}
        uses: ./.github/composite/update-git-dependency
        with:
          dependency-path: "Dependencies/EnTT"
          update-method: "latest-tag"
          pr-title: "EnTT"
          pr-branch-name: "entt-update"
          pr-token: ${{steps.generate-token.outputs.token}}

  # update-glslang:
  #   name: Update GLSLang
  #   if: github.repository == 'GamesTrap/TRAP'
  #   runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
  #   steps:
  #     - name: Cleanup workspace
  #       if: ${{ always() }}
  #       uses: gamestrap/gha-workspace-cleanup@v1.2.4
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #         ref: dev
  #     - uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #         git_committer_name: TRAP CI/CD
  #     - uses: tibdex/github-app-token@v2
  #       id: generate-token
  #       with:
  #         app_id: ${{ secrets.APP_ID }}
  #         private_key: ${{ secrets.APP_PRIVATE_KEY }}
  #     - name: Update GLSLang
  #       id: glslang
  #       run: |
  #           cd Dependencies/GLSLang/
  #           git fetch --tags
  #           git checkout $(git tag -l "sdk-*" --sort=-v:refname | head -n 1)
  #           echo "GLSLANG_VERSION=$(git tag -l "sdk-*" --sort=-v:refname | head -n 1)" >> "$GITHUB_OUTPUT"
  #           cd ../..
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #           base: dev
  #           branch: glslang-update/${{steps.glslang.outputs.GLSLANG_VERSION}}
  #           delete-branch: true
  #           commit-message: "Update GLSLang to ${{steps.glslang.outputs.GLSLANG_VERSION}}"
  #           title: "Update GLSLang to ${{steps.glslang.outputs.GLSLANG_VERSION}}"
  #           labels: "CI/CD, External, Update"
  #           assignees: "GamesTrap"
  #           milestone: 5
  #           token: ${{steps.generate-token.outputs.token}}
  #           author: "TRAP CI/CD <gamestrap@web.de>"
  #           committer: "TRAP CI/CD <gamestrap@web.de>"

  # update-imgui:
  #   name: Update ImGui
  #   if: github.repository == 'GamesTrap/TRAP'
  #   runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
  #   steps:
  #     - name: Cleanup workspace
  #       if: ${{ always() }}
  #       uses: gamestrap/gha-workspace-cleanup@v1.2.4
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #         ref: dev
  #     - uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #         git_committer_name: TRAP CI/CD
  #     - uses: tibdex/github-app-token@v2
  #       id: generate-token
  #       with:
  #         app_id: ${{ secrets.APP_ID }}
  #         private_key: ${{ secrets.APP_PRIVATE_KEY }}
  #     - name: Update ImGui
  #       id: imgui
  #       run: |
  #           cd Dependencies/ImGui/
  #           git fetch origin docking
  #           git pull origin docking
  #           newest_commit=$(git log --grep="Merge branch 'master' into docking" --pretty=format:'%H' --max-count=1)
  #           git reset --hard $newest_commit
  #           echo "IMGUI_VERSION=${newest_commit}" >> "$GITHUB_OUTPUT"
  #           cd ../..
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #           base: dev
  #           branch: imgui-update/${{steps.imgui.outputs.IMGUI_VERSION}}
  #           delete-branch: true
  #           commit-message: "Update ImGui to ${{steps.imgui.outputs.IMGUI_VERSION}}"
  #           title: "Update ImGui to ${{steps.imgui.outputs.IMGUI_VERSION}}"
  #           labels: "CI/CD, External, Update"
  #           assignees: "GamesTrap"
  #           milestone: 5
  #           token: ${{steps.generate-token.outputs.token}}
  #           author: "TRAP CI/CD <gamestrap@web.de>"
  #           committer: "TRAP CI/CD <gamestrap@web.de>"

  # update-imguizmo:
  #   name: Update ImGuizmo
  #   if: github.repository == 'GamesTrap/TRAP'
  #   runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
  #   steps:
  #     - name: Cleanup workspace
  #       if: ${{ always() }}
  #       uses: gamestrap/gha-workspace-cleanup@v1.2.4
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #         ref: dev
  #     - uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #         git_committer_name: TRAP CI/CD
  #     - uses: tibdex/github-app-token@v2
  #       id: generate-token
  #       with:
  #         app_id: ${{ secrets.APP_ID }}
  #         private_key: ${{ secrets.APP_PRIVATE_KEY }}
  #     - name: Update ImGuizmo
  #       id: imguizmo
  #       run: |
  #           cd Dependencies/ImGuizmo/
  #           git fetch origin master
  #           git pull origin master
  #           echo "IMGUIZMO_VERSION=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
  #           cd ../..
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #           base: dev
  #           branch: imguizmo-update/${{steps.imguizmo.outputs.IMGUIZMO_VERSION}}
  #           delete-branch: true
  #           commit-message: "Update ImGuizmo to ${{steps.imguizmo.outputs.IMGUIZMO_VERSION}}"
  #           title: "Update ImGuizmo to ${{steps.imguizmo.outputs.IMGUIZMO_VERSION}}"
  #           labels: "CI/CD, External, Update"
  #           assignees: "GamesTrap"
  #           milestone: 5
  #           token: ${{steps.generate-token.outputs.token}}
  #           author: "TRAP CI/CD <gamestrap@web.de>"
  #           committer: "TRAP CI/CD <gamestrap@web.de>"

  # update-moderndialogs:
  #   name: Update ModernDialogs
  #   if: github.repository == 'GamesTrap/TRAP'
  #   runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
  #   steps:
  #     - name: Cleanup workspace
  #       if: ${{ always() }}
  #       uses: gamestrap/gha-workspace-cleanup@v1.2.4
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #         ref: dev
  #     - uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #         git_committer_name: TRAP CI/CD
  #     - uses: tibdex/github-app-token@v2
  #       id: generate-token
  #       with:
  #         app_id: ${{ secrets.APP_ID }}
  #         private_key: ${{ secrets.APP_PRIVATE_KEY }}
  #     - name: Update ModernDialogs
  #       id: moderndialogs
  #       run: |
  #           cd Dependencies/ModernDialogs/
  #           git fetch --tags
  #           git checkout $(git rev-list --tags --max-count=1)
  #           echo "MODERNDIALOGS_VERSION=$(git describe --tags --exact-match)" >> "$GITHUB_OUTPUT"
  #           cd ../..
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #           base: dev
  #           branch: moderndialogs-update/${{steps.moderndialogs.outputs.MODERNDIALOGS_VERSION}}
  #           delete-branch: true
  #           commit-message: "Update ModernDialogs to ${{steps.moderndialogs.outputs.MODERNDIALOGS_VERSION}}"
  #           title: "Update ModernDialogs to ${{steps.moderndialogs.outputs.MODERNDIALOGS_VERSION}}"
  #           labels: "CI/CD, External, Update"
  #           assignees: "GamesTrap"
  #           milestone: 5
  #           token: ${{steps.generate-token.outputs.token}}
  #           author: "TRAP CI/CD <gamestrap@web.de>"
  #           committer: "TRAP CI/CD <gamestrap@web.de>"

  # update-spirvcross:
  #   name: Update SPIRV-Cross
  #   if: github.repository == 'GamesTrap/TRAP'
  #   runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
  #   steps:
  #     - name: Cleanup workspace
  #       if: ${{ always() }}
  #       uses: gamestrap/gha-workspace-cleanup@v1.2.4
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #         ref: dev
  #     - uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #         git_committer_name: TRAP CI/CD
  #     - uses: tibdex/github-app-token@v2
  #       id: generate-token
  #       with:
  #         app_id: ${{ secrets.APP_ID }}
  #         private_key: ${{ secrets.APP_PRIVATE_KEY }}
  #     - name: Update SPIRV-Cross
  #       id: spirvcross
  #       run: |
  #           cd Dependencies/SPIRV-Cross/
  #           git fetch --tags
  #           git checkout $(git tag -l "sdk-*" --sort=-v:refname | head -n 1)
  #           echo "SPIRVCROSS_VERSION=$(git tag -l "sdk-*" --sort=-v:refname | head -n 1)" >> "$GITHUB_OUTPUT"
  #           cd ../..
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #           base: dev
  #           branch: spirvcross-update/${{steps.spirvcross.outputs.SPIRVCROSS_VERSION}}
  #           delete-branch: true
  #           commit-message: "Update SPIRV-Cross to ${{steps.spirvcross.outputs.SPIRVCROSS_VERSION}}"
  #           title: "Update SPIRV-Cross to ${{steps.spirvcross.outputs.SPIRVCROSS_VERSION}}"
  #           labels: "CI/CD, External, Update"
  #           assignees: "GamesTrap"
  #           milestone: 5
  #           token: ${{steps.generate-token.outputs.token}}
  #           author: "TRAP CI/CD <gamestrap@web.de>"
  #           committer: "TRAP CI/CD <gamestrap@web.de>"

  # update-tracy:
  #   name: Update Tracy
  #   if: github.repository == 'GamesTrap/TRAP'
  #   runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
  #   steps:
  #     - name: Cleanup workspace
  #       if: ${{ always() }}
  #       uses: gamestrap/gha-workspace-cleanup@v1.2.4
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #         ref: dev
  #     - uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #         git_committer_name: TRAP CI/CD
  #     - uses: tibdex/github-app-token@v2
  #       id: generate-token
  #       with:
  #         app_id: ${{ secrets.APP_ID }}
  #         private_key: ${{ secrets.APP_PRIVATE_KEY }}
  #     - name: Update Tracy
  #       id: tracy
  #       run: |
  #           cd Dependencies/Tracy/
  #           git fetch --tags
  #           git checkout $(git rev-list --tags --max-count=1)
  #           echo "TRACY_VERSION=$(git describe --tags --exact-match)" >> "$GITHUB_OUTPUT"
  #           cd ../..
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #           base: dev
  #           branch: tracy-update/${{steps.tracy.outputs.TRACY_VERSION}}
  #           delete-branch: true
  #           commit-message: "Update Tracy to ${{steps.tracy.outputs.TRACY_VERSION}}"
  #           title: "Update Tracy to ${{steps.tracy.outputs.TRACY_VERSION}}"
  #           labels: "CI/CD, External, Update"
  #           assignees: "GamesTrap"
  #           milestone: 5
  #           token: ${{steps.generate-token.outputs.token}}
  #           author: "TRAP CI/CD <gamestrap@web.de>"
  #           committer: "TRAP CI/CD <gamestrap@web.de>"

  # update-vma:
  #   name: Update VulkanMemoryAllocator
  #   if: github.repository == 'GamesTrap/TRAP'
  #   runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
  #   steps:
  #     - name: Cleanup workspace
  #       if: ${{ always() }}
  #       uses: gamestrap/gha-workspace-cleanup@v1.2.4
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #         ref: dev
  #     - uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #         git_committer_name: TRAP CI/CD
  #     - uses: tibdex/github-app-token@v2
  #       id: generate-token
  #       with:
  #         app_id: ${{ secrets.APP_ID }}
  #         private_key: ${{ secrets.APP_PRIVATE_KEY }}
  #     - name: Update VulkanMemoryAllocator
  #       id: vma
  #       run: |
  #           cd Dependencies/VulkanMemoryAllocator/
  #           git checkout master
  #           git pull origin master
  #           echo "VMA_VERSION=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
  #           cd ../..
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #           base: dev
  #           branch: vma-update/${{steps.vma.outputs.VMA_VERSION}}
  #           delete-branch: true
  #           commit-message: "Update VulkanMemoryAllocator to ${{steps.vma.outputs.VMA_VERSION}}"
  #           title: "Update VulkanMemoryAllocator to ${{steps.vma.outputs.VMA_VERSION}}"
  #           labels: "CI/CD, External, Update"
  #           assignees: "GamesTrap"
  #           milestone: 5
  #           token: ${{steps.generate-token.outputs.token}}
  #           author: "TRAP CI/CD <gamestrap@web.de>"
  #           committer: "TRAP CI/CD <gamestrap@web.de>"

  # update-yamlcpp:
  #   name: Update YAMLCpp
  #   if: github.repository == 'GamesTrap/TRAP'
  #   runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
  #   steps:
  #     - name: Cleanup workspace
  #       if: ${{ always() }}
  #       uses: gamestrap/gha-workspace-cleanup@v1.2.4
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #         ref: dev
  #     - uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #         git_committer_name: TRAP CI/CD
  #     - uses: tibdex/github-app-token@v2
  #       id: generate-token
  #       with:
  #         app_id: ${{ secrets.APP_ID }}
  #         private_key: ${{ secrets.APP_PRIVATE_KEY }}
  #     - name: Update YAMLCpp
  #       id: yamlcpp
  #       run: |
  #           cd Dependencies/YAMLCpp/
  #           git checkout master
  #           git pull origin master
  #           echo "YAMLCPP_VERSION=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
  #           cd ../..
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #           base: dev
  #           branch: yamlcpp-update/${{steps.yamlcpp.outputs.YAMLCPP_VERSION}}
  #           delete-branch: true
  #           commit-message: "Update YAMLCpp to ${{steps.yamlcpp.outputs.YAMLCPP_VERSION}}"
  #           title: "Update YAMLCpp to ${{steps.yamlcpp.outputs.YAMLCPP_VERSION}}"
  #           labels: "CI/CD, External, Update"
  #           assignees: "GamesTrap"
  #           milestone: 5
  #           token: ${{steps.generate-token.outputs.token}}
  #           author: "TRAP CI/CD <gamestrap@web.de>"
  #           committer: "TRAP CI/CD <gamestrap@web.de>"

  # update-fmt:
  #   name: Update {fmt}
  #   if: github.repository == 'GamesTrap/TRAP'
  #   runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
  #   steps:
  #     - name: Cleanup workspace
  #       if: ${{ always() }}
  #       uses: gamestrap/gha-workspace-cleanup@v1.2.4
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #         ref: dev
  #     - uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #         git_committer_name: TRAP CI/CD
  #     - uses: tibdex/github-app-token@v2
  #       id: generate-token
  #       with:
  #         app_id: ${{ secrets.APP_ID }}
  #         private_key: ${{ secrets.APP_PRIVATE_KEY }}
  #     - name: Update {fmt}
  #       id: fmt
  #       run: |
  #           cd Dependencies/fmt/
  #           git fetch --tags
  #           git checkout $(git rev-list --tags --max-count=1)
  #           echo "FMT_VERSION=$(git describe --tags --exact-match)" >> "$GITHUB_OUTPUT"
  #           cd ../..
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #           base: dev
  #           branch: fmt-update/${{steps.fmt.outputs.FMT_VERSION}}
  #           delete-branch: true
  #           commit-message: "Update {fmt} to ${{steps.fmt.outputs.FMT_VERSION}}"
  #           title: "Update {fmt} to ${{steps.fmt.outputs.FMT_VERSION}}"
  #           labels: "CI/CD, External, Update"
  #           assignees: "GamesTrap"
  #           milestone: 5
  #           token: ${{steps.generate-token.outputs.token}}
  #           author: "TRAP CI/CD <gamestrap@web.de>"
  #           committer: "TRAP CI/CD <gamestrap@web.de>"

  # update-catch2:
  #   name: Update Catch2
  #   if: github.repository == 'GamesTrap/TRAP'
  #   runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
  #   steps:
  #     - name: Cleanup workspace
  #       if: ${{ always() }}
  #       uses: gamestrap/gha-workspace-cleanup@v1.2.4
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #         ref: dev
  #     - uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #         git_committer_name: TRAP CI/CD
  #     - uses: tibdex/github-app-token@v2
  #       id: generate-token
  #       with:
  #         app_id: ${{ secrets.APP_ID }}
  #         private_key: ${{ secrets.APP_PRIVATE_KEY }}
  #     - name: Update Catch2
  #       id: catch2
  #       run: |
  #           cd Dependencies/Catch2/
  #           git fetch --tags
  #           git checkout $(git rev-list --tags --max-count=1)
  #           echo "CATCH2_VERSION=$(git describe --tags --exact-match)" >> "$GITHUB_OUTPUT"
  #           cd ../..
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #           base: dev
  #           branch: catch2-update/${{steps.catch2.outputs.CATCH2_VERSION}}
  #           delete-branch: true
  #           commit-message: "Update Catch2 to ${{steps.catch2.outputs.CATCH2_VERSION}}"
  #           title: "Update Catch2 to ${{steps.catch2.outputs.CATCH2_VERSION}}"
  #           labels: "CI/CD, External, Update"
  #           assignees: "GamesTrap"
  #           milestone: 5
  #           token: ${{steps.generate-token.outputs.token}}
  #           author: "TRAP CI/CD <gamestrap@web.de>"
  #           committer: "TRAP CI/CD <gamestrap@web.de>"

  # update-vulkan-headers:
  #   name: Update Vulkan-Headers
  #   if: github.repository == 'GamesTrap/TRAP'
  #   runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
  #   steps:
  #     - name: Cleanup workspace
  #       if: ${{ always() }}
  #       uses: gamestrap/gha-workspace-cleanup@v1.2.4
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #         ref: dev
  #     - uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #         git_committer_name: TRAP CI/CD
  #     - uses: tibdex/github-app-token@v2
  #       id: generate-token
  #       with:
  #         app_id: ${{ secrets.APP_ID }}
  #         private_key: ${{ secrets.APP_PRIVATE_KEY }}
  #     - name: Update Vulkan-Headers
  #       id: vulkan-headers
  #       run: |
  #           cd Dependencies/Vulkan-Headers/
  #           git fetch --tags
  #           git checkout $(git rev-list --tags --max-count=1)
  #           echo "VULKAN_HEADERS_VERSION=$(git describe --tags --exact-match)" >> "$GITHUB_OUTPUT"
  #           cd ../..
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #           base: dev
  #           branch: vulkan-headers-update/${{steps.vulkan-headers.outputs.VULKAN_HEADERS_VERSION}}
  #           delete-branch: true
  #           commit-message: "Update Vulkan-Headers to ${{steps.vulkan-headers.outputs.VULKAN_HEADERS_VERSION}}"
  #           title: "Update Vulkan-Headers to ${{steps.vulkan-headers.outputs.VULKAN_HEADERS_VERSION}}"
  #           labels: "CI/CD, External, Update"
  #           assignees: "GamesTrap"
  #           milestone: 5
  #           token: ${{steps.generate-token.outputs.token}}
  #           author: "TRAP CI/CD <gamestrap@web.de>"
  #           committer: "TRAP CI/CD <gamestrap@web.de>"

  # update-gcem:
  #   name: Update GCEM
  #   if: github.repository == 'GamesTrap/TRAP'
  #   runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
  #   steps:
  #     - name: Cleanup workspace
  #       if: ${{ always() }}
  #       uses: gamestrap/gha-workspace-cleanup@v1.2.4
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #         ref: dev
  #     - uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #         git_committer_name: TRAP CI/CD
  #     - uses: tibdex/github-app-token@v2
  #       id: generate-token
  #       with:
  #         app_id: ${{ secrets.APP_ID }}
  #         private_key: ${{ secrets.APP_PRIVATE_KEY }}
  #     - name: Update GCEM
  #       id: gcem
  #       run: |
  #           cd Dependencies/GCEM/
  #           git checkout master
  #           git pull origin master
  #           echo "GCEM_VERSION=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
  #           cd ../..
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #           base: dev
  #           branch: gcem-update/${{steps.gcem.outputs.GCEM_VERSION}}
  #           delete-branch: true
  #           commit-message: "Update GCEM to ${{steps.gcem.outputs.GCEM_VERSION}}"
  #           title: "Update GCEM to ${{steps.gcem.outputs.GCEM_VERSION}}"
  #           labels: "CI/CD, External, Update"
  #           assignees: "GamesTrap"
  #           milestone: 5
  #           token: ${{steps.generate-token.outputs.token}}
  #           author: "TRAP CI/CD <gamestrap@web.de>"
  #           committer: "TRAP CI/CD <gamestrap@web.de>"

  # update-premake-vscodegen:
  #   name: Update Premake-VSCodeGen
  #   if: github.repository == 'GamesTrap/TRAP'
  #   runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
  #   steps:
  #     - name: Cleanup workspace
  #       if: ${{ always() }}
  #       uses: gamestrap/gha-workspace-cleanup@v1.2.4
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #         ref: dev
  #     - uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #         git_committer_name: TRAP CI/CD
  #     - uses: tibdex/github-app-token@v2
  #       id: generate-token
  #       with:
  #         app_id: ${{ secrets.APP_ID }}
  #         private_key: ${{ secrets.APP_PRIVATE_KEY }}
  #     - name: Update Premake-VSCodeGen
  #       id: premake-vscodegen
  #       run: |
  #           cd .modules/vscode/
  #           git checkout main
  #           git pull origin main
  #           echo "PREMAKE-VSCODEGEN_VERSION=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
  #           cd ../..
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v5
  #       with:
  #           base: dev
  #           branch: premake-vscodegen-update/${{steps.premake-vscodegen.outputs.PREMAKE-VSCODEGEN_VERSION}}
  #           delete-branch: true
  #           commit-message: "Update Premake-VSCodeGen to ${{steps.premake-vscodegen.outputs.PREMAKE-VSCODEGEN_VERSION}}"
  #           title: "Update Premake-VSCodeGen to ${{steps.premake-vscodegen.outputs.PREMAKE-VSCODEGEN_VERSION}}"
  #           labels: "CI/CD, External, Update"
  #           assignees: "GamesTrap"
  #           milestone: 5
  #           token: ${{steps.generate-token.outputs.token}}
  #           author: "TRAP CI/CD <gamestrap@web.de>"
  #           committer: "TRAP CI/CD <gamestrap@web.de>"
