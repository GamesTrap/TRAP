# Main Build CI. This compiles TRAPâ„¢ for Windows and Linux (Ubuntu)

name: Build-CI

# Controls when the workflow will run
on:
  # Run on all pull requests
  pull_request:
  # Run on main, master and dev branches
  push:
    branches: [ main, master, dev ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-linux-gcc-13:
    name: Build Linux GCC 13
    runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
    env:
      CC: gcc-13
      CXX: g++-13
    steps:
    # Check-out repository and submodules under $GITHUB_WORKSPACE
    - uses: actions/checkout@v3
      with:
        submodules: 'true'
    # Add toolchain ppa
    - name: Add toolchain ppa
      run: sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/ppa
    # Update package list
    - name: Update package list
      run: sudo apt update
    # Install all dependencies
    - name: Install dependencies
      run: sudo apt install -y g++-13 mold xorg-dev libwayland-dev libxkbcommon-dev wayland-protocols
    # Setup the Vulkan SDK
    - name: Prepare latest Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: latest
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true
    # Make scripts and premake executable
    - name: Set Execute flags
      run: |
       chmod +x libs/premake5/linux/premake5
       chmod +x GeneratorScripts/GenerateProjectMake.sh
    - name: Generate Make files
      run: |
       cd GeneratorScripts/
       ./GenerateProjectMake.sh
       cd ..
    - name: Compile code
      run: config=release make all -j$(nproc)
    - name: Copy Assets (and other data)
      run: |
        cp -r Games/Headless-Tests/Assets bin/Release-linux-x86_64/Games/Headless-Tests/
        cp -r Games/Sandbox/Assets bin/Release-linux-x86_64/Games/Sandbox/
        cp -r Games/Tests/Assets bin/Release-linux-x86_64/Games/Tests/
        cp -r Games/Tests3D/Assets bin/Release-linux-x86_64/Games/Tests3D/
        cp -r Games/TRAP-Editor/Assets bin/Release-linux-x86_64/Games/TRAP-Editor/
        cp -r Games/TRAP-Editor/Resources bin/Release-linux-x86_64/Games/TRAP-Editor/
        cp -r Utility/QOIConv bin/Release-linux-x86_64/Utility/
        cp -r Redists bin/Release-linux-x86_64/
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Linux GCC Release Executables
        path: |
          bin/Release-linux-x86_64/Games
          bin/Release-linux-x86_64/Utility
          bin/Release-linux-x86_64/Redists
  build-linux-clang-16:
    name: Build Linux Clang 16
    runs-on: [self-hosted, Linux, X64, ubuntu, 23.04, cpu]
    env:
      CC: clang-16
      CXX: clang++-16
    steps:
    # Check-out repository and submodules under $GITHUB_WORKSPACE
    - uses: actions/checkout@v3
      with:
        submodules: 'true'
    # Add toolchain ppa
    - name: Add toolchain ppa
      run: sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/ppa
    # Update package list
    - name: Update package list
      run: sudo apt update
    # Install all dependencies
    - name: Install dependencies
      run: sudo apt install -y clang-16 mold xorg-dev libwayland-dev libxkbcommon-dev wayland-protocols
    # Setup the Vulkan SDK
    - name: Prepare latest Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: latest
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true
    # Make scripts and premake executable
    - name: Set Execute flags
      run: |
        chmod +x libs/premake5/linux/premake5
        chmod +x GeneratorScripts/GenerateProjectMake.sh
    - name: Generate Make files
      run: |
        cd GeneratorScripts/
        ./GenerateProjectMake.sh
        cd ..
    - name: Compile code
      run: config=release make all -j$(nproc)
    - name: Copy Assets (and other data)
      run: |
        cp -r Games/Headless-Tests/Assets bin/Release-linux-x86_64/Games/Headless-Tests/
        cp -r Games/Sandbox/Assets bin/Release-linux-x86_64/Games/Sandbox/
        cp -r Games/Tests/Assets bin/Release-linux-x86_64/Games/Tests/
        cp -r Games/Tests3D/Assets bin/Release-linux-x86_64/Games/Tests3D/
        cp -r Games/TRAP-Editor/Assets bin/Release-linux-x86_64/Games/TRAP-Editor/
        cp -r Games/TRAP-Editor/Resources bin/Release-linux-x86_64/Games/TRAP-Editor/
        cp -r Utility/QOIConv bin/Release-linux-x86_64/Utility/
        cp -r Redists bin/Release-linux-x86_64/
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Linux Clang Release Executables
        path: |
          bin/Release-linux-x86_64/Games
          bin/Release-linux-x86_64/Utility
          bin/Release-linux-x86_64/Redists
  build-windows-msvc-2022:
    name: Build Windows MSVC 2022
    runs-on: [self-hosted, windows, X64, cpu]
    steps:
    # Check-out repository and submodules under $GITHUB_WORKSPACE
    - uses: actions/checkout@v3
      with:
        submodules: 'true'
    # Setup the Vulkan SDK
    - name: Prepare latest Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: latest
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true
    # Setup msbuild
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    # Generate the Visual Studio 2022 Project files
    - name: Generate Visual Studio 2022 Project files
      run: |
        cd GeneratorScripts
        .\GenerateProjectVS2022.bat
        cd ..
    - name: Compile code
      run: msbuild /m TRAP.sln /property:Configuration=Release
    - name: Copy Assets (and other data)
      run: |
        Xcopy Games\Headless-Tests\Assets bin\Release-windows-x86_64\Games\Headless-Tests\Assets /I /H /E /C
        Xcopy Games\Sandbox\Assets bin\Release-windows-x86_64\Games\Sandbox\Assets /I /H /E /C
        Xcopy Games\Tests\Assets bin\Release-windows-x86_64\Games\Tests\Assets /I /H /E /C
        Xcopy Games\Tests3D\Assets bin\Release-windows-x86_64\Games\Tests3D\Assets /I /H /E /C
        Xcopy Games\TRAP-Editor\Assets bin\Release-windows-x86_64\Games\TRAP-Editor\Assets /I /H /E /C
        Xcopy Games\TRAP-Editor\Resources bin\Release-windows-x86_64\Games\TRAP-Editor\Resources /I /H /E /C
        Xcopy Utility\QOIConv bin\Release-windows-x86_64\Utility\QOIConv /I /H /E /C
        Xcopy Redists bin\Release-windows-x86_64\Redists /I /H /E /C
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Windows MSVC 2022 Release Executables
        path: |
          bin/Release-windows-x86_64/Games
          bin/Release-windows-x86_64/Utility
          bin/Release-windows-x86_64/Redists
