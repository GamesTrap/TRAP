.. _events:

======
Events
======

-------
General
-------

.. warning::
   `Events`_ in :ref:`trap_engine` are currently blocking, meaning when an event occurs it immediately gets dispatched and must be dealt with right then and there!

---------
EventType
---------

.. code-block:: cpp

    enum class TRAP::EventType
    {
        None,
        WindowClose, WindowResize, WindowFocus, WindowLostFocus, WindowMoved,
        AppTick, AppUpdate, AppRender, //These are currently unused!
        KeyPressed, KeyReleased, KeyTyped,
        MouseButtonPressed, MouseButtonReleased, MouseMoved, MouseScrolled,
        ControllerConnected, ControllerDisconnected
    };

| **Description**
| TRAP::`EventType`_ is used to specifiy the type of a TRAP::`Event`_

.. warning::
   TRAP::`EventType`_::AppTick, TRAP::`EventType`_::AppUpdate and TRAP::`EventType`_::AppRender are currently unused by :ref:`trap_engine`!

-------------
EventCategory
-------------

.. code-block:: cpp

    enum class TRAP::EventCategory
    {
        None        = 0,
        Application = BIT(0),
        Input       = BIT(1),
        Keyboard    = BIT(2),
        Mouse       = BIT(3),
        MouseButton = BIT(4),
        Controller  = BIT(5)
    };

| **Description**
| TRAP::`EventCategory`_ is used to specifiy the category of a TRAP::`Event`_

.. seealso::
   :ref:`core_bit`

.. _event:

-----
Event
-----

| **Description**
| TRAP::`Event`_ is used as a base class for every event type in TRAP::`EventType`_

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    virtual TRAP::EventType TRAP::Event::GetEventType() const = 0;

| **Description**
| This function returns the type(in form of TRAP::`EventType`_\) of a TRAP::`Event`_

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    virtual const char* TRAP::Event::GetName() const = 0;

| **Description**
| This function returns a c-string containing the name of a TRAP::`Event`_

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    virtual int32_t TRAP::Event::GetCategoryFlags() const = 0;

| **Description**
| This function returns an int32_t containing the category flags of a TRAP::`Event`_

.. seealso::
   TRAP::`EventCategory`_

^^^^^^^^
ToString
^^^^^^^^

.. code-block:: cpp

    virtual std::string TRAP::Event::ToString() const;

| **Description**
| This function returns a std::string containing the name and values of a TRAP::`Event`_

^^^^^^^^^^^^
IsInCategory
^^^^^^^^^^^^

.. code-block:: cpp

    bool TRAP::Event::IsInCategory(TRAP::EventCategory category) const;

| **Description**
| This functions returns whether the TRAP::`Event`_ is in the specified TRAP::`EventCategory`_ or not

| **Parameters**
| :code:`category` Specifies the TRAP::`EventCategory`_ to check

.. _event_dispatcher:

---------------
EventDispatcher
---------------

| **Description**
| TRAP::`EventDispatcher`_ is used to dispatch TRAP::`Event`\s to different functions

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventDispatcher(TRAP::Event& event);

| **Description**
| Creates a new TRAP::`EventDispatcher`_ for the given TRAP::`Event`_

| **Parameters**
| :code:`event` Specifies the TRAP::`Event`_ to dispatch

.. _event_dispatch:

^^^^^^^^
Dispatch
^^^^^^^^

.. code-block:: cpp

    template<typename T, typename F>
    bool TRAP::EventDispatcher::Dispatch(const F& func);

| **Description**
| This function dispatches the specified TRAP::`Event`_ class to the specified function :code:`func` and returns true if dispatched successfully

| **Parameters**
| :code:`T` Specifies the TRAP::`Event`_ class to dispatch
| :code:`F(func)` Specifies the function to dispatch the TRAP::`Event`_ to

.. seealso::
   Use a lambda to call an user created function that takes the TRAP::`Event`_ as a parameter
   Example: :code:`Dispatch<WindowCloseEvent>([this](WindowCloseEvent& e) {return OnWindowClose(e); });`

-----------------
WindowResizeEvent
-----------------

.. note::
   TRAP::`WindowResizeEvent`_ inherits from TRAP::`Event`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::WindowResizeEvent(const uint32_t width, const uint32_t height, const std::string_view title);

| **Description**
| This is used to create new TRAP::`WindowResizeEvent`_\s

| **Parameters**
| :code:`width` Specifies the new width for the TRAP::`WindowResizeEvent`_
| :code:`height` Specifies the new height for the TRAP::`WindowResizeEvent`_
| :code:`title` Specifies the title of the TRAP:::ref:`window` the TRAP::`WindowResizeEvent`_ is for

^^^^^^^^
GetWidth
^^^^^^^^

.. code-block:: cpp

    uint32_t TRAP::WindowResizeEvent::GetWidth() const;

| **Description**
| Returns the width of the TRAP::`WindowResizeEvent`_

^^^^^^^^^
GetHeight
^^^^^^^^^

.. code-block:: cpp

    uint32_t TRAP::WindowResizeEvent::GetHeight() const;

| **Description**
| Returns the height of the TRAP::`WindowResizeEvent`_

^^^^^^^^
GetTitle
^^^^^^^^

.. code-block:: cpp

    std::string_view TRAP::WindowResizeEvent::GetTitle() const;

| **Description**
| Returns the title of the TRAP:::ref:`window` from the TRAP::`WindowResizeEvent`_

^^^^^^^^
ToString
^^^^^^^^

.. code-block:: cpp

    std::string TRAP::WindowResizeEvent::ToString() const override;

| **Description**
| Returns a string containing: :code:`"WindowResizeEvent: " + width + 'x' + height`

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::WindowResizeEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::WindowResize

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::WindowResizeEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::WindowResize

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::WindowResizeEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"WindowResize"`

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::WindowResizeEvent::GetCategoryFlags() const override;

| **Description**
| Returns TRAP::`EventCategory`_::Application casted to an :code:`int32_t`

----------------
WindowCloseEvent
----------------

.. note::
   TRAP::`WindowCloseEvent`_ inherits from TRAP::`Event`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::WindowCloseEvent(const std::string_view title);

| **Description**
| This is used to create new TRAP::`WindowCloseEvent`_\s

| **Parameters**
| :code:`title` Specifies the title of the TRAP:::ref:`window` the event is for

^^^^^^^^
GetTitle
^^^^^^^^

.. code-block:: cpp

    std::string_view TRAP::WindowCloseEvent::GetTitle() const;

| **Description**
| Returns the title of the TRAP:::ref:`window` from the TRAP::`WindowCloseEvent`_

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::WindowCloseEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::WindowClose

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::WindowCloseEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::WindowClose

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::WindowCloseEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"WindowClose"`

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::WindowCloseEvent::GetCategoryFlags() const override;

| **Description**
| Returns TRAP::`EventCategory`_::Application casted to an :code:`int32_t`

----------------
WindowMovedEvent
----------------

.. note::
   TRAP::`WindowMovedEvent`_ inherits from TRAP::`Event`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::WindowMovedEvent(const int32_t x, const int32_t y, const std::string_view title);

| **Description**
| This is used to create new TRAP::`WindowMovedEvent`_\s

| **Parameters**
| :code:`x` Specifies the new x position for the TRAP::`WindowMovedEvent`_
| :code:`y` Specifies the new y position for the TRAP::`WindowMovedEvent`_
| :code:`title` Specifies the title of the TRAP:::ref:`window` the TRAP::`WindowMovedEvent`_ is for

^^^^
GetX
^^^^

.. code-block:: cpp

    int32_t TRAP::WindowMovedEvent::GetX() const;

| **Description**
| Returns the x position of the TRAP::`WindowMovedEvent`_

^^^^
GetY
^^^^

.. code-block:: cpp

    int32_t TRAP::WindowMovedEvent::GetY() const;

| **Description**
| Returns the y position of the TRAP::`WindowMovedEvent`_

^^^^^^^^
GetTitle
^^^^^^^^

.. code-block:: cpp

    std::string_view TRAP::WindowMovedEvent::GetTitle() const;

| **Description**
| Returns the title of the window from the TRAP::`WindowMovedEvent`_

^^^^^^^^
ToString
^^^^^^^^

.. code-block:: cpp

    std::string TRAP::WindowMovedEvent::ToString() const override;

| **Description**
| Returns a string containing: :code:`"WindowMovedEvent: " + x + ", " + y`

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::WindowMovedEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::WindowMoved

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::WindowMovedEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::WindowMoved

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::WindowMovedEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"WindowMoved"`

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::WindowMovedEvent::GetCategoryFlags() const override;

| **Description**
| Returns TRAP::`EventCategory`_::Application casted to an :code:`int32_t`

----------------
WindowFocusEvent
----------------

.. note::
   TRAP::`WindowFocusEvent`_ inherits from TRAP::`Event`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::WindowFocusEvent(const std::string_view title);

| **Description**
| This is used to create new TRAP::`WindowFocusEvent`_\s

| **Parameters**
| :code:`title` Specifies the title of the TRAP:::ref:`window` the TRAP::`WindowFocusEvent`_ is for

^^^^^^^^
GetTitle
^^^^^^^^

.. code-block:: cpp

    std::string_view TRAP::WindowFocusEvent::GetTitle() const;

| **Description**
| Returns the title of the window from the TRAP::`WindowFocusEvent`_

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::WindowFocusEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::WindowFocus

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::WindowFocusEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::WindowFocus

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::WindowFocusEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"WindowFocus"`

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::WindowFocusEvent::GetCategoryFlags() const override;

| **Description**
| Returns TRAP::`EventCategory`_::Application casted to an :code:`int32_t`

--------------------
WindowLostFocusEvent
--------------------

.. note::
   TRAP::`WindowLostFocusEvent`_ inherits from TRAP::`Event`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::WindowLostFocusEvent(const std::string_view title);

| **Description**
| This is used to create new TRAP::`WindowLostFocusEvent`_\s

| **Parameters**
| :code:`title` Specifies the title of the TRAP:::ref:`window` the TRAP::`WindowLostFocusEvent`_ is for

^^^^^^^^
GetTitle
^^^^^^^^

.. code-block:: cpp

    std::string_view TRAP::WindowLostFocusEvent::GetTitle() const;

| **Description**
| Returns the title of the window from the TRAP::`WindowLostFocusEvent`_

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::WindowLostFocusEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::WindowLostFocus

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::WindowLostFocusEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::WindowLostFocus

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::WindowLostFocusEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"WindowLostFocus"`

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::WindowLostFocusEvent::GetCategoryFlags() const override;

| **Description**
| Returns TRAP::`EventCategory`_::Application casted to an :code:`int32_t`

------------
AppTickEvent
------------

.. note::
   TRAP::`AppTickEvent`_ inherits from TRAP::`Event`_

.. warning::
   TRAP::`AppTickEvent`_ is currently unused by :ref:`trap_engine`

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::AppTickEvent() = default;

| **Description**
| This is used to create new TRAP::`AppTickEvent`_\s

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::AppTickEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::AppTick

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::AppTickEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::AppTick

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::AppTickEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"AppTick"`

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::AppTickEvent::GetCategoryFlags() const override;

| **Description**
| Returns TRAP::`EventCategory`_::Application casted to an :code:`int32_t`

--------------
AppUpdateEvent
--------------

.. note::
   TRAP::`AppUpdateEvent`_ inherits from TRAP::`Event`_

.. warning::
   TRAP::`AppUpdateEvent`_ is currently unused by :ref:`trap_engine`

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::AppUpdateEvent() = default;

| **Description**
| This is used to create new TRAP::`AppUpdateEvent`_\s

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::AppUpdateEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::AppUpdate

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::AppUpdateEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::AppUpdate

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::AppUpdateEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"AppUpdate"`

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::AppUpdateEvent::GetCategoryFlags() const override;

| **Description**
| Returns TRAP::`EventCategory`_::Application casted to an :code:`int32_t`

--------------
AppRenderEvent
--------------

.. note::
   TRAP::`AppRenderEvent`_ inherits from TRAP::`Event`_

.. warning::
   TRAP::`AppRenderEvent`_ is currently unused by :ref:`trap_engine`

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::AppRenderEvent() = default;

| **Description**
| This is used to create new TRAP::`AppRenderEvent`_\s

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::AppRenderEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::AppRender

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::AppRenderEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::AppRender

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::AppRenderEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"AppRender"`

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::AppRenderEvent::GetCategoryFlags() const override;

| **Description**
| Returns TRAP::`EventCategory`_::Application casted to an :code:`int32_t`

---------------
MouseMovedEvent
---------------

.. note::
   TRAP::`MouseMovedEvent`_ inherits from TRAP::`Event`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::MouseMovedEvent(const float x, const float y, const std::string_view title);

| **Description**
| This is used to create new TRAP::`MouseMovedEvent`_\s

| **Parameters**
| :code:`x` Specifies the new x position for the TRAP::`MouseMovedEvent`_
| :code:`y` Specifies the new y position for the TRAP::`MouseMovedEvent`_
| :code:`title` Specifies the title of the TRAP:::ref:`window` the TRAP::`MouseMovedEvent`_ is for

^^^^
GetX
^^^^

.. code-block:: cpp

    float TRAP::MouseMovedEvent::GetX() const;

| **Description**
| Returns the x position of the TRAP::`MouseMovedEvent`_

^^^^
GetY
^^^^

.. code-block:: cpp

    float TRAP::MouseMovedEvent::GetY() const;

| **Description**
| Returns the y position of the TRAP::`MouseMovedEvent`_

^^^^^^^^
GetTitle
^^^^^^^^

.. code-block:: cpp

    std::string TRAP::MouseMovedEvent::GetTitle() const;

| **Description**
| Returns the title of the window from the TRAP::`MouseMovedEvent`_

^^^^^^^^
ToString
^^^^^^^^

.. code-block:: cpp

    std::string_view TRAP::MouseMovedEvent::ToString() const override;

| **Description**
| Returns a string containing: :code:`"MouseMovedEvent: " + x + ", " + y`

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::MouseMovedEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::MouseMoved

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::MouseMovedEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::MouseMoved

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::MouseMovedEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"MouseMoved"`

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::MouseMovedEvent::GetCategoryFlags() const override;

| **Description**
| Returns TRAP::`EventCategory`_::Mouse | TRAP::`EventCategory`_::Input casted to an :code:`int32_t`

------------------
MouseScrolledEvent
------------------

.. note::
   TRAP::`MouseScrolledEvent`_ inherits from TRAP::`Event`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::MouseScrolledEvent(const float xOffset, const float yOffset, const std::string_view title);

| **Description**
| This is used to create new TRAP::`MouseScrolledEvent`_\s

| **Parameters**
| :code:`xOffset` Specifies the new x offset for the TRAP::`MouseScrolledEvent`_
| :code:`yOffset` Specifies the new y offset for the TRAP::`MouseScrolledEvent`_
| :code:`title` Specifies the title of the TRAP:::ref:`window` the TRAP::`MouseScrolledEvent`_ is for

^^^^^^^^^^
GetXOffset
^^^^^^^^^^

.. code-block:: cpp

    float TRAP::MouseScrolledEvent::GetXOffset() const;

| **Description**
| Returns the x offset of the TRAP::`MouseScrolledEvent`_

^^^^^^^^^^
GetYOffset
^^^^^^^^^^

.. code-block:: cpp

    float TRAP::MouseScrolledEvent::GetYOffset() const;

| **Description**
| Returns the y offset of the TRAP::`MouseScrolledEvent`_

^^^^^^^^
GetTitle
^^^^^^^^

.. code-block:: cpp

    std::string TRAP::MouseScrolledEvent::GetTitle() const;

| **Description**
| Returns the title of the window from the TRAP::`MouseScrolledEvent`_

^^^^^^^^
ToString
^^^^^^^^

.. code-block:: cpp

    std::string_view TRAP::MouseScrolledEvent::ToString() const override;

| **Description**
| Returns a string containing: :code:`"MouseScrolledEvent: " + xOffset + ", " + yOffset`

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::MouseScrolledEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::MouseScrolled

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::MouseScrolledEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::MouseScrolled

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::MouseScrolledEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"MouseScrolled"`

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::MouseScrolledEvent::GetCategoryFlags() const override;

| **Description**
| Returns TRAP::`EventCategory`_::Mouse | TRAP::`EventCategory`_::Input casted to an :code:`int32_t`

----------------
MouseButtonEvent
----------------

.. note::
   TRAP::`MouseButtonEvent`_ inherits from TRAP::`Event`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    protected:
        TRAP::MouseButtonEvent(const TRAP::Input::MouseButton button);

| **Description**
| This is used to create new TRAP::`MouseButtonEvent`_\s

| **Parameters**
| :code:`button` Specifies the TRAP:::ref:`input`:::ref:`mouse_button` for the TRAP::`MouseButtonEvent`_

^^^^^^^^^^^^^^
GetMouseButton
^^^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::Input::MouseButton TRAP::MouseButtonEvent::GetMouseButton() const;

| **Description**
| This returns the TRAP:::ref:`input`:::ref:`mouse_button` of the TRAP::`MouseButtonEvent`_

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::MouseButtonEvent::GetCategoryFlags() const override;

| **Description**
| Returns TRAP::`EventCategory`_::Mouse | TRAP::`EventCategory`_::Input casted to an :code:`int32_t`

-----------------------
MouseButtonPressedEvent
-----------------------

.. note::
   TRAP::`MouseButtonPressedEvent`_ inherits from TRAP::`MouseButtonEvent`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::MouseButtonPressedEvent(const TRAP::Input::MouseButton button, const std::string_view title);

| **Description**
| This is used to create new TRAP::`MouseButtonPressedEvent`_\s

| **Parameters**
| :code:`button` Specifies the TRAP:::ref:`input`:::ref:`mouse_button` for the TRAP::`MouseButtonPressedEvent`_
| :code:`title` Specifies the title of the TRAP:::ref:`window` the TRAP::`MouseButtonPressedEvent`_ is for

^^^^^^^^
GetTitle
^^^^^^^^

.. code-block:: cpp

    std::string_view TRAP::MouseButtonPressedEvent::GetTitle() const;

| **Description**
| Returns the title of the window from the TRAP::`MouseButtonPressedEvent`_

^^^^^^^^
ToString
^^^^^^^^

.. code-block:: cpp

    std::string TRAP::MouseButtonPressedEvent::ToString() const override;

| **Description**
| Returns a string containing: :code:`"MouseButtonPressedEvent: " + button`

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::MouseButtonPressedEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::MouseButtonPressed

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::MouseButtonPressedEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::MouseButtonPressed

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::MouseScrolledEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"MouseButtonPressed"`

------------------------
MouseButtonReleasedEvent
------------------------

.. note::
   TRAP::`MouseButtonReleasedEvent`_ inherits from TRAP::`MouseButtonEvent`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::MouseButtonReleasedEvent(const TRAP::Input::MouseButton button, const std::string_view title);

| **Description**
| This is used to create new TRAP::`MouseButtonReleasedEvent`_\s

| **Parameters**
| :code:`button` Specifies the TRAP:::ref:`input`:::ref:`mouse_button` for the TRAP::`MouseButtonReleasedEvent`_
| :code:`title` Specifies the title of the TRAP:::ref:`window` the TRAP::`MouseButtonReleasedEvent`_ is for

^^^^^^^^
GetTitle
^^^^^^^^

.. code-block:: cpp

    std::string_view TRAP::MouseButtonReleasedEvent::GetTitle() const;

| **Description**
| Returns the title of the window from the TRAP::`MouseButtonReleasedEvent`_

^^^^^^^^
ToString
^^^^^^^^

.. code-block:: cpp

    std::string TRAP::MouseButtonReleasedEvent::ToString() const override;

| **Description**
| Returns a string containing: :code:`"MouseButtonReleasedEvent: " + button`

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::MouseButtonReleasedEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::MouseButtonReleased

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::MouseButtonReleasedEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::MouseButtonReleased

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::MouseButtonReleasedEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"MouseButtonReleased"`

--------
KeyEvent
--------

.. note::
   TRAP::`KeyEvent`_ inherits from TRAP::`Event`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    protected:
        TRAP::KeyEvent(const TRAP::Input::Key keyCode);

| **Description**
| This is used to create new TRAP::`KeyEvent`_\s

| **Parameters**
| :code:`keyCode` Specifies the TRAP:::ref:`input`:::ref:`key` for the TRAP::`KeyEvent`_

^^^^^^^^^^
GetKeyCode
^^^^^^^^^^

.. code-block:: cpp

    TRAP::Input::Key TRAP::KeyEvent::GetKeyCode() const;

| **Description**
| This returns the TRAP:::ref:`input`:::ref:`key` of the TRAP::`KeyEvent`_

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::KeyEvent::GetCategoryFlags() const override;

| **Description**
| Returns TRAP::`EventCategory`_::Keyboard | TRAP::`EventCategory`_::Input casted to an :code:`int32_t`

---------------
KeyPressedEvent
---------------

.. note::
   TRAP::`KeyPressedEvent`_ inherits from TRAP::`KeyEvent`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::KeyPressedEvent(const TRAP::Input::Key keyCode, const int32_t repeatCount, const std::string_view title);

| **Description**
| This is used to create new TRAP::`KeyPressedEvent`_\s

| **Parameters**
| :code:`keyCode` Specifies the TRAP:::ref:`input`:::ref:`key` for the TRAP::`KeyPressedEvent`_
| :code:`repeatCount` Specifies the amount of repeats for the given :code:`keyCode` for the TRAP::`KeyPressedEvent`_
| :code:`title` Specifies the title of the TRAP:::ref:`window` the TRAP::`KeyPressedEvent`_ is for

^^^^^^^^^^^^^^
GetRepeatCount
^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::KeyPressedEvent::GetRepeatCount() const;

| **Description**
| Returns the amount of repeats of the TRAP:::ref:`input`:::ref:`key` from the TRAP::`KeyPressedEvent`_

^^^^^^^^
GetTitle
^^^^^^^^

.. code-block:: cpp

    std::string_view TRAP::KeyPressedEvent::GetTitle() const;

| **Description**
| Returns the title of the window from the TRAP::`KeyPressedEvent`_

^^^^^^^^
ToString
^^^^^^^^

.. code-block:: cpp

    std::string TRAP::KeyPressedEvent::ToString() const override;

| **Description**
| Returns a string containing: :code:`"KeyPressedEvent: " + keyCode + " (" + repeatCount + " repeats)"`

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::KeyPressedEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::KeyPressed

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::KeyPressedEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::KeyPressed

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::KeyPressedEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"KeyPressed"`

----------------
KeyReleasedEvent
----------------

.. note::
   TRAP::`KeyReleasedEvent`_ inherits from TRAP::`KeyEvent`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::KeyReleasedEvent(const TRAP::Input::Key keyCode, const std::string_view title);

| **Description**
| This is used to create new TRAP::`KeyReleasedEvent`_\s

| **Parameters**
| :code:`keyCode` Specifies the TRAP:::ref:`input`:::ref:`key` for the TRAP::`KeyReleasedEvent`_
| :code:`title` Specifies the title of the TRAP:::ref:`window` the TRAP::`KeyReleasedEvent`_ is for

^^^^^^^^
GetTitle
^^^^^^^^

.. code-block:: cpp

    std::string_view TRAP::KeyReleasedEvent::GetTitle() const;

| **Description**
| Returns the title of the window from the TRAP::`KeyReleasedEvent`_

^^^^^^^^
ToString
^^^^^^^^

.. code-block:: cpp

    std::string TRAP::KeyReleasedEvent::ToString() const override;

| **Description**
| Returns a string containing: :code:`"KeyReleasedEvent: " + keyCode"`

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::KeyReleasedEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::KeyReleased

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::KeyReleasedEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::KeyReleased

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::KeyReleasedEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"KeyReleased"`

-------------
KeyTypedEvent
-------------

.. note::
   TRAP::`KeyTypedEvent`_ inherits from TRAP::`KeyEvent`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::KeyTypedEvent(const TRAP::Input::Key keyCode, const std::string_view title);

| **Description**
| This is used to create new TRAP::`KeyTypedEvent`_\s

| **Parameters**
| :code:`keyCode` Specifies the TRAP:::ref:`input`:::ref:`key` for the TRAP::`KeyTypedEvent`_
| :code:`title` Specifies the title of the TRAP:::ref:`window` the TRAP::`KeyTypedEvent`_ is for

^^^^^^^^
GetTitle
^^^^^^^^

.. code-block:: cpp

    std::string_view TRAP::KeyTypedEvent::GetTitle() const;

| **Description**
| Returns the title of the window from the TRAP::`KeyTypedEvent`_

^^^^^^^^
ToString
^^^^^^^^

.. code-block:: cpp

    std::string TRAP::KeyTypedEvent::ToString() const override;

| **Description**
| Returns a string containing: :code:`"KeyTypedEvent: " + keyCode"`

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::KeyTypedEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::KeyTyped

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::KeyTypedEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::KeyTyped

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::KeyTypedEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"KeyTyped"`

.. _controller_event:

---------------
ControllerEvent
---------------

.. note::
   TRAP::`ControllerEvent`_ inherits from TRAP::`Event`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    protected:
        TRAP::ControllerEvent(const TRAP::Input::Controller controller);

| **Description**
| This is used to create new TRAP::`ControllerEvent`_\s

| **Parameters**
| :code:`controller` Specifies the TRAP:::ref:`input`:::ref:`controller` for the TRAP::`ControllerEvent`_

^^^^^^^^^^^^^
GetController
^^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::Input::Controller TRAP::ControllerEvent::GetController() const;

| **Description**
| This returns the TRAP:::ref:`input`:::ref:`controller` of the TRAP::`ControllerEvent`_

^^^^^^^^^^^^^^^^
GetCategoryFlags
^^^^^^^^^^^^^^^^

.. code-block:: cpp

    int32_t TRAP::ControllerEvent::GetCategoryFlags() const override;

| **Description**
| Returns TRAP::`EventCategory`_::Controller | TRAP::`EventCategory`_::Input casted to an :code:`int32_t`

----------------------
ControllerConnectEvent
----------------------

.. note::
   TRAP::`ControllerConnectEvent`_ inherits from TRAP::`ControllerEvent`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::ControllerConnectEvent(const TRAP::Input::Controller controller);

| **Description**
| This is used to create new TRAP::`ControllerConnectEvent`_\s

| **Parameters**
| :code:`controller` Specifies the TRAP:::ref:`input`:::ref:`controller` for the TRAP::`ControllerConnectEvent`_

^^^^^^^^
ToString
^^^^^^^^

.. code-block:: cpp

    std::string TRAP::ControllerConnectEvent::ToString() const override;

| **Description**
| Returns a string containing: :code:`"ControllerConnectEvent: " + controller`

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::ControllerConnectEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::ControllerConnected

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::ControllerConnectEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::ControllerConnected

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::ControllerConnectEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"ControllerConnect"`

-------------------------
ControllerDisconnectEvent
-------------------------

.. note::
   TRAP::`ControllerDisconnectEvent`_ inherits from TRAP::`ControllerEvent`_

^^^^^^^^^^^
Constructor
^^^^^^^^^^^

.. code-block:: cpp

    TRAP::ControllerDisconnectEvent(const TRAP::Input::Controller controller);

| **Description**
| This is used to create new TRAP::`ControllerDisconnectEvent`_\s

| **Parameters**
| :code:`controller` Specifies the TRAP:::ref:`input`:::ref:`controller` for the TRAP::`ControllerDisconnectEvent`_

^^^^^^^^
ToString
^^^^^^^^

.. code-block:: cpp

    std::string TRAP::ControllerDisconnectEvent::ToString() const override;

| **Description**
| Returns a string containing: :code:`"ControllerDisconnectEvent: " + controller`

^^^^^^^^^^^^^
GetStaticType
^^^^^^^^^^^^^

.. code-block:: cpp

    static TRAP::EventType TRAP::ControllerDisconnectEvent::GetStaticType();

| **Description**
| Returns TRAP::`EventType`_::ControllerDisconnected

^^^^^^^^^^^^
GetEventType
^^^^^^^^^^^^

.. code-block:: cpp

    TRAP::EventType TRAP::ControllerDisconnectEvent::GetEventType() const override;

| **Description**
| Returns TRAP::`EventType`_::ControllerDisconnect

^^^^^^^
GetName
^^^^^^^

.. code-block:: cpp

    const char* TRAP::ControllerDisconnectEvent::GetName() const override;

| **Description**
| Returns a c-string containing: :code:`"ControllerDisconnect"`
