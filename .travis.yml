language: cpp

matrix:
  include:
    - os: linux
      dist: bionic
      compiler: gcc
      env: COMPILER=g++-9
      addons:
        apt:
          update: true
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-9
          - gcc-9
          - xorg-dev
          - graphviz
          - libxcb-dri3-0
          - libxcb-present0
          - libpciaccess0
          - cmake
          - libxcb-dri3-dev
          - libx11-dev
          - libx11-xcb-dev
          - libmirclient-dev
          - libwayland-dev
          - libxrandr-dev
      install: if [[ "$COMPILER" == "g++-9" ]]; then export CXX="g++-9" CC="gcc-9"; fi
      script:
        - mkdir vulkan
        - wget -c https://vulkan.lunarg.com/sdk/download/1.2.148.0/linux/vulkansdk-linux-x86_64-1.2.148.0.tar.gz?Human=true -O vulkan.tar.gz
        - tar -xzf vulkan.tar.gz -vC vulkan
        - chmod +x vulkan/1.2.148.0/setup-env.sh
        - source vulkan/1.2.148.0/setup-env.sh
        - chmod +x libs/premake5/linux/premake5
        - libs/premake5/linux/premake5 gmake2
        - make
    - os: windows
      filter_secrets: false
      before_install:
        - curl -L --silent --show-error --output VulkanSDK.exe https://vulkan.lunarg.com/sdk/download/1.2.141.2/windows/VulkanSDK-1.2.141.2-Installer.exe?Human=true
        - chmod +x VulkanSDK.exe
        - PowerShell -Command 'Start-Process -Wait -FilePath "VulkanSDK.exe" -ArgumentList "/S" -PassThru'
      env: 
        - LABEL="windows-msvc" 
        - MSBUILD_PATH="/C/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/MSBuild/15.0/Bin"
        - VULKAN_SDK="/C/VulkanSDK/1.2.141.2"
      script:
        - setx VULKAN_SDK "C:\VulkanSDK\1.2.141.2"
        - set VULKAN_SDK "C:\VulkanSDK\1.2.141.2"
        - libs/premake5/windows/premake5.exe vs2017 
        - export PATH=$MSBUILD_PATH:$PATH 
        - MSBuild.exe TRAP.sln //t:Build