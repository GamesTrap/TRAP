Shader (After Reflection):
    Descriptors:
        ✔ Create descriptors per shader (includes RootSignature per Shader (maybe not needed?!) @done(21-06-07 03:21)
            ☐ Test with global GraphicsRootSignature again
    RenderAPI switching:
        ☐ Fix runtime API switching

PS5 Adaptive Trigger support & more:
    - https://github.com/Ohjurot/DualSense-Windows
GLFW:
    - Port to Android using NDK (Needs Vulkan as backend | maybe switch to Vulkan 1.0
                                    and use extension instead of current Vulkan 1.2 directly?!)
        Use the following as basis for the implementation: https://github.com/xCuri0/glfw/tree/android &
                                                            https://github.com/xCuri0/glfw-android-example
With most things working with Vulkan:
    ☐ Cleanup everything using Visual Studio
    ☐ TRAP::Ref to TRAP::Scope (Renderer stuff)
    ☐ Better ImGui integration (see The-Forge implementation)
    ☐ Compute Shader support (will be needed for a Mipmap compute shader because
        there is no equivalent of vkCmdBlitImage in D3D12)
    ☐ HDR support?!
    ☐ Texture GPU compression (for Images like PNG, PAM, ...)
    ☐ Loader for KTX, DDS Texture (can only be loaded as Texture because they are GPU compressed?!)
    ☐ Raytracing support?!

More stuff in private GitKraken Board: